{"remainingRequest":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\tslint-loader\\index.js!C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\src\\main\\webapp\\app\\core\\event\\event.services.ts","dependencies":[{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\src\\main\\webapp\\app\\core\\event\\event.services.ts","mtime":1545067249064},{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545158605344},{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1545158604533},{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar EventService = /** @class */ (function () {\r\n    function EventService(http) {\r\n        this.http = http;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/event';\r\n    }\r\n    EventService.prototype.query = function (userEvents) {\r\n        /* todo: modify to take additional params (number of participants) */\r\n        return this.http.get(this.resourceUrl, { observe: 'response', params: new http_1.HttpParams().set('userEvents', String(userEvents)) });\r\n    };\r\n    EventService.prototype.find = function (id) {\r\n        return this.http.get(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    EventService.prototype.save = function (event) {\r\n        return this.http.post(this.resourceUrl + '/single', event);\r\n    };\r\n    EventService.prototype.saveMultiple = function (event) {\r\n        return this.http.post(this.resourceUrl + '/multiple', event);\r\n    };\r\n    EventService.prototype.delete = function (id) {\r\n        /* todo: fill body with correct delete request */\r\n        return null;\r\n    };\r\n    EventService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\r\n    ], EventService);\r\n    return EventService;\r\n    var _a;\r\n}());\r\nexports.EventService = EventService;\r\n",{"version":3,"file":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\src\\main\\webapp\\app\\core\\event\\event.services.ts","sourceRoot":"","sources":["C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\tslint-loader\\index.js!C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\src\\main\\webapp\\app\\core\\event\\event.services.ts"],"names":[],"mappings":";;;AAAA,sCAAyC;AACzC,6CAA0E;AAG1E,mDAAiD;AAKjD;IAGI,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,gBAAW,GAAG,8BAAc,GAAG,WAAW,CAAC;IAGnD,CAAC;IAED,4BAAK,GAAL,UAAM,UAAmB;QAErB,qEAAqE;QAErE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,WAAW,EAAE,EAAC,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,iBAAU,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,EAAC,CAAC,CAAC;IAC5I,CAAC;IAED,2BAAI,GAAJ,UAAK,EAAU;QACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,WAAW,SAAI,EAAI,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACrF,CAAC;IAED,2BAAI,GAAJ,UAAK,KAAU;QACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,SAAS,EAAE,KAAK,CAAC,CAAC;IAC/D,CAAC;IAED,mCAAY,GAAZ,UAAa,KAAU;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,WAAW,EAAE,KAAK,CAAC,CAAC;IACjE,CAAC;IAED,6BAAM,GAAN,UAAO,EAAU;QAEb,iDAAiD;QAEjD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IA9BQ,YAAY;QADxB,iBAAU,CAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC;qEAIH,iBAAU,oBAAV,iBAAU;OAH3B,YAAY,CA+BxB;IAAD,mBAAC;;CAAA,AA/BD,IA+BC;AA/BY,oCAAY","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpParams, HttpResponse} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\n\r\nimport {SERVER_API_URL} from 'app/app.constants';\r\nimport {createRequestOption} from 'app/shared/util/request-util';\r\nimport {IEvent} from './event.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class EventService {\r\n    private resourceUrl = SERVER_API_URL + 'api/event';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    query(userEvents: boolean): Observable<HttpResponse<IEvent[]>> {\r\n\r\n        /* todo: modify to take additional params (number of participants) */\r\n\r\n        return this.http.get<IEvent[]>(this.resourceUrl, {observe: 'response', params: new HttpParams().set('userEvents', String(userEvents))});\r\n    }\r\n\r\n    find(id: number): Observable<HttpResponse<IEvent>> {\r\n        return this.http.get<IEvent>(`${this.resourceUrl}/${id}`, {observe: 'response'});\r\n    }\r\n\r\n    save(event: any): Observable<any> {\r\n        return this.http.post(this.resourceUrl + '/single', event);\r\n    }\r\n\r\n    saveMultiple(event: any): Observable<any> {\r\n        return this.http.post(this.resourceUrl + '/multiple', event);\r\n    }\r\n\r\n    delete(id: number): Observable<HttpResponse<any>> {\r\n\r\n        /* todo: fill body with correct delete request */\r\n\r\n        return null;\r\n    }\r\n}\r\n"]}]}