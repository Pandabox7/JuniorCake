{"remainingRequest":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\tslint-loader\\index.js!C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\src\\main\\webapp\\app\\core\\login\\login.service.ts","dependencies":[{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\src\\main\\webapp\\app\\core\\login\\login.service.ts","mtime":1545067249124},{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1545158605344},{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1545158604533},{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar principal_service_1 = require(\"../auth/principal.service\");\r\nvar auth_jwt_service_1 = require(\"../auth/auth-jwt.service\");\r\nvar LoginService = /** @class */ (function () {\r\n    function LoginService(principal, authServerProvider) {\r\n        this.principal = principal;\r\n        this.authServerProvider = authServerProvider;\r\n    }\r\n    LoginService.prototype.login = function (credentials, callback) {\r\n        var _this = this;\r\n        var cb = callback || function () { };\r\n        return new Promise(function (resolve, reject) {\r\n            _this.authServerProvider.login(credentials).subscribe(function (data) {\r\n                _this.principal.identity(true).then(function (account) {\r\n                    resolve(data);\r\n                });\r\n                return cb();\r\n            }, function (err) {\r\n                _this.logout();\r\n                reject(err);\r\n                return cb(err);\r\n            });\r\n        });\r\n    };\r\n    LoginService.prototype.loginWithToken = function (jwt, rememberMe) {\r\n        return this.authServerProvider.loginWithToken(jwt, rememberMe);\r\n    };\r\n    LoginService.prototype.logout = function () {\r\n        this.authServerProvider.logout().subscribe();\r\n        this.principal.authenticate(null);\r\n    };\r\n    LoginService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof principal_service_1.Principal !== \"undefined\" && principal_service_1.Principal) === \"function\" && _a || Object, typeof (_b = typeof auth_jwt_service_1.AuthServerProvider !== \"undefined\" && auth_jwt_service_1.AuthServerProvider) === \"function\" && _b || Object])\r\n    ], LoginService);\r\n    return LoginService;\r\n    var _a, _b;\r\n}());\r\nexports.LoginService = LoginService;\r\n",{"version":3,"file":"C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\src\\main\\webapp\\app\\core\\login\\login.service.ts","sourceRoot":"","sources":["C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\node_modules\\tslint-loader\\index.js!C:\\Users\\Lindberg\\Downloads\\Junior Java test, winter 2018-19\\src\\main\\webapp\\app\\core\\login\\login.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAE3C,+DAAsD;AACtD,6DAA8D;AAG9D;IACI,sBAAoB,SAAoB,EAAU,kBAAsC;QAApE,cAAS,GAAT,SAAS,CAAW;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAE5F,4BAAK,GAAL,UAAM,WAAW,EAAE,QAAS;QAA5B,iBAkBC;QAjBG,IAAM,EAAE,GAAG,QAAQ,IAAI,cAAY,CAAC,CAAC;QAErC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,SAAS,CAChD,UAAA,IAAI;gBACA,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;oBACtC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,EAAE,EAAE,CAAC;YAChB,CAAC,EACD,UAAA,GAAG;gBACC,KAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;gBACZ,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAc,GAAd,UAAe,GAAG,EAAE,UAAU;QAC1B,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IACnE,CAAC;IAED,6BAAM,GAAN;QACI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IA9BQ,YAAY;QADxB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEA,6BAAS,oBAAT,6BAAS,sDAA8B,qCAAkB,oBAAlB,qCAAkB;OAD/E,YAAY,CA+BxB;IAAD,mBAAC;;CAAA,AA/BD,IA+BC;AA/BY,oCAAY","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { Principal } from '../auth/principal.service';\r\nimport { AuthServerProvider } from '../auth/auth-jwt.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginService {\r\n    constructor(private principal: Principal, private authServerProvider: AuthServerProvider) {}\r\n\r\n    login(credentials, callback?) {\r\n        const cb = callback || function() {};\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.authServerProvider.login(credentials).subscribe(\r\n                data => {\r\n                    this.principal.identity(true).then(account => {\r\n                        resolve(data);\r\n                    });\r\n                    return cb();\r\n                },\r\n                err => {\r\n                    this.logout();\r\n                    reject(err);\r\n                    return cb(err);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    loginWithToken(jwt, rememberMe) {\r\n        return this.authServerProvider.loginWithToken(jwt, rememberMe);\r\n    }\r\n\r\n    logout() {\r\n        this.authServerProvider.logout().subscribe();\r\n        this.principal.authenticate(null);\r\n    }\r\n}\r\n"]}]}